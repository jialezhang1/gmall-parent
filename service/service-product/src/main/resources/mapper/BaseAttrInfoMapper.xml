<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace ： 接口全路径-->
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">
    <!--
        配置返回的结果集映射
        id: 表示唯一标识
        type: 表示返回结果集的映射类型！
        autoMapping: 表示自动映射
    -->
    <resultMap id="BaseAttrInfoMap" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">
        <!--
            id: 表示主键：
                property：表示实体类的属性名
                column：通过 sql 语句查询结果集的字段名
            result: 表示普通字段
        -->
        <id property="id" column="id"></id>

        <!--
            mybatis 如何配置 1：n
            property：表示实体类的属性名
            ofType: 返回结果集的类型

            第二种方式： column="关联条件" select="方法名"
        -->
        <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true" >
            <!--
                如果sql 语句出现的结果集中有字段重名，则需要在配置文件中起别名！
            -->
            <id property="id" column="attr_value_id"></id>
        </collection>
        <!-- 多对1-->
        <!--<association property=""></association>-->
    </resultMap>

    <!--
        id： 表示方法名
        resultMap:  返回结果集映射
        resultType:  返回结果类型

        编写sql语句之后，可能有会 ; ! 不要！

        #: 占位符 ?
        $: 字符串拼接 会引起 sql 注入！
    -->
    <select id="selectAttrInfoList" resultMap="BaseAttrInfoMap">
        select
        bai.id,
        bai.attr_name,
        bai.category_id,
        bai.category_level,
        bav.id attr_value_id,
        bav.value_name
        from base_attr_info bai
        inner join base_attr_value bav on bai.id = bav.attr_id
        <where>
            <if test="category1Id !=null and category1Id != 0">
                or  bai.category_id = #{category1Id} and category_level = 1
            </if>
            <if test="category2Id !=null and category2Id != 0">
                or  bai.category_id = #{category2Id} and category_level = 2
            </if>
            <if test="category3Id !=null and category3Id != 0">
                or  bai.category_id = #{category3Id} and category_level = 3
            </if>
            and bai.is_deleted = 0
            and bav.is_deleted = 0
        </where>
        order by bai.category_level, bai.id
    </select>

    <!--获取平台属性数据-->
    <select id="selectAttrList" resultMap="BaseAttrInfoMap">
        select
            bai.id,
            bai.attr_name,
            bai.category_id,
            bai.category_level,
            bav.id attr_value_id,
            bav.value_name,
            bav.attr_id
            from base_attr_info bai
            inner join base_attr_value bav on bai.id = bav.attr_id
            inner join sku_attr_value sav on bav.id = sav.value_id
        where sav.sku_id = #{skuId}
    </select>
</mapper>